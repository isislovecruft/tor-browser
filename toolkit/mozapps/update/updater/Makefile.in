# vim:set ts=8 sw=8 sts=8 noet:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Don't link the updater against libmozglue. See bug 687139
MOZ_GLUE_LDFLAGS =
MOZ_GLUE_PROGRAM_LDFLAGS =

ifeq ($(OS_ARCH),WINNT)
LIBS += $(call EXPAND_LIBNAME_PATH,updatecommon-standalone,../common-standalone)
else
LIBS += $(call EXPAND_LIBNAME_PATH,updatecommon,../common)
endif

LIBS += \
  $(call EXPAND_LIBNAME_PATH,mar,$(DEPTH)/modules/libmar/src) \
  $(MOZ_BZ2_LIBS) \
  $(NULL)

LIBS += $(call EXPAND_LIBNAME_PATH,signmar,$(DEPTH)/modules/libmar/sign)
LIBS += $(call EXPAND_LIBNAME_PATH,verifymar,$(DEPTH)/modules/libmar/verify)
ifeq ($(OS_ARCH),WINNT)
OS_LIBS += $(call EXPAND_LIBNAME,comctl32 ws2_32 shell32 shlwapi)
else
LIBS += $(DIST)/lib/$(LIB_PREFIX)nss3.$(LIB_SUFFIX) \
	$(DIST)/lib/$(LIB_PREFIX)nssutil3.$(LIB_SUFFIX) \
	$(NSPR_LIBS)
endif

ifdef MOZ_WIDGET_GTK
OS_CXXFLAGS += $(TK_CFLAGS)
OS_LIBS += $(TK_LIBS)
endif

ifeq (gonk,$(MOZ_WIDGET_TOOLKIT)) #{
OS_LIBS += -lcutils -lsysutils
# clear out all the --wrap flags and remove dependency on mozglue for Gonk
WRAP_LDFLAGS :=
endif #}

ifndef MOZ_WINCONSOLE
ifdef MOZ_DEBUG
MOZ_WINCONSOLE = 1
else
MOZ_WINCONSOLE = 0
endif
endif

include $(topsrcdir)/config/rules.mk

ifneq (,$(filter beta release esr,$(MOZ_UPDATE_CHANNEL)))
	PRIMARY_CERT = release_primary.der
	SECONDARY_CERT = release_secondary.der
else ifneq (,$(filter nightly aurora nightly-elm nightly-profiling nightly-oak nightly-ux,$(MOZ_UPDATE_CHANNEL)))
	PRIMARY_CERT = nightly_aurora_level3_primary.der
	SECONDARY_CERT = nightly_aurora_level3_secondary.der
else
	PRIMARY_CERT = xpcshellCertificate.der
	SECONDARY_CERT = xpcshellCertificate.der
endif

export::
	$(PYTHON) $(srcdir)/gen_cert_header.py primaryCertData $(srcdir)/$(PRIMARY_CERT) > primaryCert.h
	$(PYTHON) $(srcdir)/gen_cert_header.py secondaryCertData $(srcdir)/$(SECONDARY_CERT) > secondaryCert.h

ifdef MOZ_WIDGET_GTK
libs:: updater.png
	$(NSINSTALL) -D $(DIST)/bin/icons
	$(INSTALL) $(IFLAGS1) $^ $(DIST)/bin/icons
endif

ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT))
libs::
	$(NSINSTALL) -D $(DIST)/bin/updater.app
	rsync -a -C --exclude '*.in' $(srcdir)/macbuild/Contents $(DIST)/bin/updater.app 
	sed -e 's/%APP_NAME%/$(MOZ_APP_DISPLAYNAME)/' $(srcdir)/macbuild/Contents/Resources/English.lproj/InfoPlist.strings.in | \
	  iconv -f UTF-8 -t UTF-16 > $(DIST)/bin/updater.app/Contents/Resources/English.lproj/InfoPlist.strings
	$(NSINSTALL) -D $(DIST)/bin/updater.app/Contents/MacOS
	$(NSINSTALL) $(DIST)/bin/updater $(DIST)/bin/updater.app/Contents/MacOS
	rm -f $(DIST)/bin/updater
endif

ifeq ($(OS_ARCH),WINNT)
EXTRA_LIBS += $(call EXPAND_LIBNAME,crypt32)
EXTRA_LIBS += $(call EXPAND_LIBNAME,advapi32)
endif

CXXFLAGS += $(MOZ_BZ2_CFLAGS)
